1- Whats A Database ?
a database is a perment storage unit ex:MySql for projects (Free Service), Oracle for enterprices (Paid Service), SQL Server (Microsoft), MongoDB. DB2(IDM), SAP(ALL IN One), Sales Forces. (ALL THE SAME DATABASE FUNDMENTALS).
2- Why A Database?
	-Storage Capacity.
	-Security.
	-User Access Control (UAC).
	-Concurrent Users.
3- Database Components ?
	The Main Bulding Blogs:
		-Tables (row,RECORD,column,FIELD) => (CELLS) => (RECORD VALUE).
		-Relationship: 
			1- One_To_Many is a direct relationship between two tables.
			-a primary table or refrencce table.
			-forign table (second table).
			-each record in the primary table can be connected or related 			to one or more records in forign (second) tables.
			-forign key (many) & primary key (one) 
			2- One_To_One is a direct relationship between to tables, each 			record in the first table can ONLY be connected or be related 			to a single record in another table.
4- Managing MySql Databases:
			-- You Most Try All Databases Tools--
	- Database Admin Tools, (Database Clients)(GUI). 
		ex:navicat(paid),todd not a user friendly(paid) for Oracle.
		ex:navicat(paid),managment studio for SQL Server(free)
		ex:workbench(free)not a user friendly,navicat.
				--phpmyadmin is the best--
	- Command-line.

(breadcrumb)for phpmyadmin server ex:1270.0.1
(context menu)for toolbar
(main working area)
(database navigation panel)
_______________________________________________________________________________________	

5- Many to Many is A Logical (indirect) Relationship Between Two Tables (With A third Supportive Table).
Each Record Can Be Related or Connected TO ONE OR MORE Records in The Other Table Throe The Supportive Table (Third Table).
6- Referential integrity is an action that the database should apply to the foreign 		Cascade         SetNull             NoAction                Restrict
	record when the user deletes or updates the reference record What Apply 				for Primary Record applies on forign Record
---------------------------------------------------------------------------------------

Data consistency: Normal forms ensure that data is consistent and does not contain any redundant information. This helps to prevent inconsistencies and errors in the database.
Data redundancy: Normal forms minimize data redundancy by organizing data into tables that contain only unique data. This reduces the amount of storage space required for the database and makes it easier to manage.
Response time: Normal forms can improve query performance by reducing the number of joins required to retrieve data. This helps to speed up query processing and improve overall system performance.
Database maintenance: Normal forms make it easier to maintain the database by reducing the amount of redundant data that needs to be updated, deleted, or modified. This helps to improve database management and reduce the risk of errors or inconsistencies.
Database design: Normal forms provide guidelines for designing databases that are efficient, flexible, and scalable. This helps to ensure that the database can be easily modified, updated, or expanded as needed.


